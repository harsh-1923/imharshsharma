@import "@radix-ui/colors/black-alpha.css";
@import "@radix-ui/colors/mauve.css";
@import "@radix-ui/colors/slate.css";
@import "@radix-ui/colors/violet.css";

.ts-index-tray {
  position: fixed;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
}

@media (max-width: 600px) {
  .ts-index-tray {
    bottom: 0px;
    left: 0px;
    width: 100%;
    transform: translateX(0%);
  }

  .ts-index-root {
    border-top: var(--outline);
    border-radius: 0 !important;
    max-width: var(--page-max-width) !important;
  }
}

.ts-index-root {
  width: 100%;
  border-radius: 4px;
  overflow: hidden;
  box-shadow: 0 2px 10px var(--black-a7);
  --scrollbar-size: 10px;
  max-width: calc(0.8 * var(--page-max-width));

  /* EXP */
  z-index: 1000;
  -webkit-box-shadow: -1px 2px 41px 6px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: -1px 2px 41px 6px rgba(0, 0, 0, 0.75);
  box-shadow: -1px 2px 41px 6px rgba(0, 0, 0, 0.75);

  border-radius: 10px;

  background-color: rgb(26 26 26);
}

.ts-index-viewport {
  width: 100%;
  height: 100%;
  border-radius: inherit;
  display: flex;
}

.tray-wrap {
  --elevated-padding: 40px;
  --normal-padding: 15px;
  display: flex;
  align-items: center;
  gap: var(--gap-xl);
  padding: 15px 20px;
  transition: all 200ms ease-in-out;
}

.ts-index-scrollbar {
  display: flex;
  user-select: none;
  touch-action: none;
  padding: 2px;
  transition: background 160ms ease-out;
}

.ts-index-scrollbar[data-orientation="horizontal"] {
  flex-direction: column;
  height: var(--scrollbar-size);
}

.ts-tray-sroll-thumb {
  flex: 1;
  background: var(--slate-11);
  border-radius: var(--scrollbar-size);
  position: relative;
}

.ts-tray-sroll-thumb::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
}

.tray-item {
  color: var(--text-secondary);
  line-height: 18px;
  display: inline-block;
  white-space: nowrap;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transform: all 200ms ease-in-out;
}

.tray-item:where([data-selected="true"]) {
  color: var(--accent);
}
